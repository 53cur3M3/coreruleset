##! Please refer to the documentation at 
##! https://coreruleset.org/docs/development/regexp_assemble/.

##!+ i

##! add capture group
##!^ (
##!$ )

##! IPv4 pattern
##! ##!> assemble
##! 25[0-5]
##! (?:2[0-4]|1?\d)?\d
##! ##!=< ipv4
##! ##!<

##! This regex starts with a list of all the schemes that can be used to make a request
##!> assemble
  ##!> include url-schemes
##!=>
://
##!=>

##! http://425.510.425.510/ Dotted decimal with overflow (already covered by RFI rule 931100)
##! http://2852039166/ Dotless decimal
##! http://7147006462/ Dotless decimal with overflow
\d{10}

##! http://0xA9.0xFE.0xA9.0xFE/ Dotted hexadecimal
(?:0x[a-f0-9]{2}\.){3}0x[a-f0-9]{2}

##! http://0xA9FEA9FE/ Dotless hexadecimal
0x[a-f0-9]{8}

##! http://0x41414141A9FEA9FE/ Dotless hexadecimal with overflow
0x[a-f0-9]{16}

##! http://0251.0376.0251.0376/ Dotted octal
##! http://0251.00376.000251.0000376/ Dotted octal with padding
(?:0{1,4}\d{1,3}\.){3}0{1,4}\d{1,3}

##! http://169.254.43518/
\d{1,3}\.\d{1,3}\.\d{5}

##! http://169.16689662/
\d{1,3}\.\d{8}

##! http://[::ffff:a9fe:a9fe] IPV6 Compressed - IPv6 (base regex from https://ihateregex.io/expr/ipv6/, with [0-9] converted to \d and with non-capturing groups (below))
##! http://[0:0:0:0:0:ffff:a9fe:a9fe] IPV6 Expanded
##!   ##!> assemble
##! \[
##!   ##!=>
##!     ##! template 1-4-hex  [a-f0-9]{1,4}
##!     ##! [0:0:0:0:0:0:0:0]
##! (?:{{1-4-hex}}:){7,7}{{1-4-hex}}
##!     ##! [0:] ... [0:0:0:0:0:0:0:]
##! (?:{{1-4-hex}}:){1,7}:
##!     ##! [0::0] ... [0:0:0:0:0:0::0]
##! (?:{{1-4-hex}}:){1,6}:{{1-4-hex}}
##!     ##! [0::0] ... [0:0:0:0:0::0:0]
##! (?:{{1-4-hex}}:){1,5}(?::{{1-4-hex}}){1,2}
##!     ##! [0::0] ... [0:0:0:0::0:0:0]
##! (?:{{1-4-hex}}:){1,4}(?::{{1-4-hex}}){1,3}
##!     ##! [0::0] ... [0:0:0::0:0:0:0]
##! (?:{{1-4-hex}}:){1,3}(?::{{1-4-hex}}){1,4}
##!     ##! [0::0] ... [0:0::0:0:0:0:0]
##! (?:{{1-4-hex}}:){1,2}(?::{{1-4-hex}}){1,5}
##!     ##! [0::0] ... [0::0:0:0:0:0:0]
##! {{1-4-hex}}:(?::{{1-4-hex}}){1,6}
##!     ##! [::] ... [::0:0:0:0:0:0:0]
##! :(?:(?::{{1-4-hex}}){1,7}|:)
##!     ##! link-local unicast with zone ID
##!     ##! [fe80%zone1] ... [fe80::%zone1] ... [fe80::0:0:0:0:0:0%zone1]
##! fe80:(?::[a-f0-9]{0,4}){0,4}%[a-z0-9]{1,}

##! ::(?:ffff(:0{1,4}){0,1}:){0,1}(?:(?:25[0-5]|(?:2[0-4]|1?\d)?\d)\.)?(?:25[0-5]|(?:2[0-4]|1?\d)?\d)
##! (?:{{1-4-hex}}:){1,4}:(?:25[0-5]|(?:2[0-4]|1?\d)?\d)\.)?(?:25[0-5]|(?:2[0-4]|1?\d)?\d)
##!     ##!<
##!   ##!<

##! http://[0:0:0:0:0:ffff:169.254.169.254] IPV6/IPV4
##!   ##!> assemble
##! \[
##!   ##!=>
##! 
##!   ##! IPv6
##! (?:[0-9a-f]{1,4}:){6}
##!   ##!=>
##! 
##!   ##! IPv4
##! (?:
##!   ##!=>
##!   ##!=> ipv4
##! \.){3}
##!   ##!=>
##!   ##!=> ipv4
##! 
##! \]
##!   ##!<

##! http://[::]

##! Something that looks like IPv6 in a URL.
##! Matches full and compressed IPv6, link-local IPv6 with
##! zone ID, and embedded IPv4.
\[[a-f\d:]+(?:[\d.]+|%\w+)?\]


##! These come from https://github.com/cujanovic/SSRF-Testing

##! http://127.88.23.245:22/+&@google.com:80#+@google.com:80/ (already covered by RFI rule 931100)

##! http://127.88.23.245:22/?@google.com:80/ (already covered by RFI rule 931100)

##! http://127.88.23.245:22/#@www.google.com:80/ (already covered by RFI rule 931100)

##! http://google.com:80\\@127.88.23.245:22/ (already covered by RFI rule 931100)

##! http://google.com:80+&@127.88.23.245:22/#+@google.com:80/
##! http://google.com:80+&@google.com:80#+@127.88.23.245:22/

  ##!> assemble
  ##! domain + port
[a-z][\w\-\.]{1,255}:\d{1,5}
  ##!=>

  ##! separator
\+&@
  ##!=>

  ##! IPv4 + port or domain + port
    ##!> assemble
(?:\d{1,3}\.){3,3}\d{1,3}
[a-z][\w\-\.]{1,255}
    ##!<
:\d{1,5}
  ##!=< ip-or-domain
  ##!=> ip-or-domain

  ##! optional forward slash
\/?
  ##!=>

  ##! fragment
#
  ##!=>

  ##! separator
\+@
  ##!=>

  ##! IPv4 + port or domain + port
  ##!=> ip-or-domain

  ##! optional forward slash
\/?
  ##!=>
  ##!<

##! Enclosed alphanumerics are used for evasion (https://en.wikipedia.org/wiki/Enclosed_Alphanumerics)
##! These will normally sound many alarms, but having them flagged as ssrf attempt makes sense
##! ①②⑦.
\xe2\x91\xa0\xe2\x91\xa1\xe2\x91\xa6\.
##! ①⑥⑨.
\xe2\x91\xa0\xe2\x91\xa5\xe2\x91\xa8\.
##! ⓛⓞⓒⓐⓛⓗⓞⓢⓣ
\xe2\x93\x9b\xe2\x93\x9e\xe2\x93\x92\xe2\x93\x90\xe2\x93\x9b\xe2\x93\x97\xe2\x93\x9e\xe2\x93\xa2\xe2\x93\xa3
##! ⓁⓄⒸⒶⓁⒽⓄⓈⓉ
\xe2\x93\x81\xe2\x93\x84\xe2\x92\xb8\xe2\x92\xb6\xe2\x93\x81\xe2\x92\xbd\xe2\x93\x84\xe2\x93\x88\xe2\x93\x89

##!<
