# ------------------------------------------------------------------------
# OWASP ModSecurity Core Rule Set ver.3.4.0-dev
# Copyright (c) 2006-2020 Trustwave and contributors. All rights reserved.
# Copyright (c) 2021-2022 Core Rule Set project. All rights reserved.
#
# The OWASP ModSecurity Core Rule Set is distributed under
# Apache Software License (ASL) version 2
# Please see the enclosed LICENSE file for full details.
# ------------------------------------------------------------------------

#
# This file is used in post processing after the response has been sent to
# the client (in the logging phase).  Its purpose is to provide inbound+outbound
# correlation of events to provide a more intelligent designation as to the outcome
# or result of the transaction - meaning, was this a successful attack?
#

#
# -= Paranoia Level 0 (empty) =- (apply unconditionally)
#

#
# -=[ Anomaly Score Reporting ]=-
#

SecRule TX:REPORTING_LEVEL "@lt 1" "id:980041,phase:5,pass,nolog,skipAfter:END-REPORTING"
#
# -= Reporting Level 1 =- (apply only when tx.reporting_level is sufficiently high: 1 or higher)
#

# inbound - blocked
SecRule TX:BLOCKING_INBOUND_ANOMALY_SCORE "@ge %{tx.inbound_anomaly_score_threshold}" \
    "id:980130,\
    phase:5,\
    pass,\
    t:none,\
    noauditlog,\
    msg:'Inbound Anomaly Score Exceeded (Total Inbound Score (blocking/detection): %{tx.blocking_inbound_anomaly_score}/%{tx.detection_inbound_anomaly_score} - SQLI=%{tx.sql_injection_score},XSS=%{tx.xss_score},RFI=%{tx.rfi_score},LFI=%{tx.lfi_score},RCE=%{tx.rce_score},PHPI=%{tx.php_injection_score},HTTP=%{tx.http_violation_score},SESS=%{tx.session_fixation_score}): individual paranoia level scores: %{tx.inbound_anomaly_score_pl1}, %{tx.inbound_anomaly_score_pl2}, %{tx.inbound_anomaly_score_pl3}, %{tx.inbound_anomaly_score_pl4}',\
    tag:'reporting',\
    ver:'OWASP_CRS/3.4.0-dev'"

# outbound - blocked
SecRule TX:BLOCKING_OUTBOUND_ANOMALY_SCORE "@ge %{tx.outbound_anomaly_score_threshold}" \
    "id:980140,\
    phase:5,\
    pass,\
    t:none,\
    noauditlog,\
    msg:'Outbound Anomaly Score Exceeded (Total Outbound Score (blocking/detection): %{tx.blocking_outbound_anomaly_score}/%{tx.detection_outbound_anomaly_score} - SQLI=%{tx.sql_injection_score},XSS=%{tx.xss_score},RFI=%{tx.rfi_score},LFI=%{tx.lfi_score},RCE=%{tx.rce_score},PHPI=%{tx.php_injection_score},HTTP=%{tx.http_violation_score},SESS=%{tx.session_fixation_score}): individual paranoia level scores: %{tx.outbound_anomaly_score_pl1}, %{tx.outbound_anomaly_score_pl2}, %{tx.outbound_anomaly_score_pl3}, %{tx.outbound_anomaly_score_pl4}',\
    tag:'reporting',\
    ver:'OWASP_CRS/3.4.0-dev'"

SecRule TX:REPORTING_LEVEL "@lt 2" "id:980042,phase:5,pass,nolog,skipAfter:END-REPORTING"
#
# -= Reporting Level 2 =- (apply only when tx.reporting_level is sufficiently high: 2 or higher)
#

# inbound - scored but not blocked
SecRule TX:BLOCKING_INBOUND_ANOMALY_SCORE "@lt %{tx.inbound_anomaly_score_threshold}" \
    "id:980120,\
    phase:5,\
    pass,\
    t:none,\
    noauditlog,\
    msg:'Inbound Anomaly Score below threshold (Total Inbound Score (blocking/detection): %{tx.blocking_inbound_anomaly_score}/%{tx.detection_inbound_anomaly_score} - SQLI=%{tx.sql_injection_score},XSS=%{tx.xss_score},RFI=%{tx.rfi_score},LFI=%{tx.lfi_score},RCE=%{tx.rce_score},PHPI=%{tx.php_injection_score},HTTP=%{tx.http_violation_score},SESS=%{tx.session_fixation_score}): individual paranoia level scores: %{tx.inbound_anomaly_score_pl1}, %{tx.inbound_anomaly_score_pl2}, %{tx.inbound_anomaly_score_pl3}, %{tx.inbound_anomaly_score_pl4}',\
    tag:'reporting',\
    ver:'OWASP_CRS/3.4.0-dev',\
    chain"
    SecRule TX:DETECTION_INBOUND_ANOMALY_SCORE "@gt 0"

# outbound - scored but not blocked
SecRule TX:BLOCKING_OUTBOUND_ANOMALY_SCORE "@lt %{tx.outbound_anomaly_score_threshold}" \
    "id:980150,\
    phase:5,\
    pass,\
    t:none,\
    noauditlog,\
    msg:'Outbound Anomaly Score below threshold (Total Outbound Score (blocking/detection): %{tx.blocking_outbound_anomaly_score}/%{tx.detection_outbound_anomaly_score} - SQLI=%{tx.sql_injection_score},XSS=%{tx.xss_score},RFI=%{tx.rfi_score},LFI=%{tx.lfi_score},RCE=%{tx.rce_score},PHPI=%{tx.php_injection_score},HTTP=%{tx.http_violation_score},SESS=%{tx.session_fixation_score}): individual paranoia level scores: %{tx.outbound_anomaly_score_pl1}, %{tx.outbound_anomaly_score_pl2}, %{tx.outbound_anomaly_score_pl3}, %{tx.outbound_anomaly_score_pl4}',\
    tag:'reporting',\
    ver:'OWASP_CRS/3.4.0-dev',\
    chain"
    SecRule TX:DETECTION_OUTBOUND_ANOMALY_SCORE "@gt 0"

SecRule TX:REPORTING_LEVEL "@lt 3" "id:980043,phase:5,pass,nolog,skipAfter:END-REPORTING"
#
# -= Reporting Level 3 =- (apply only when tx.reporting_level is sufficiently high: 3 or higher)
#

# inbound and outbound - all requests
SecAction \
    "id:980160,\
    phase:5,\
    pass,\
    t:none,\
    noauditlog,\
    msg:'Anomaly Scores (Total Inbound Score (blocking/detection): %{tx.blocking_inbound_anomaly_score}/%{tx.detection_inbound_anomaly_score} - Total Outbound Score (blocking/detection): %{tx.blocking_outbound_anomaly_score}/%{tx.detection_outbound_anomaly_score} - SQLI=%{tx.sql_injection_score},XSS=%{tx.xss_score},RFI=%{tx.rfi_score},LFI=%{tx.lfi_score},RCE=%{tx.rce_score},PHPI=%{tx.php_injection_score},HTTP=%{tx.http_violation_score},SESS=%{tx.session_fixation_score}): individual paranoia level scores: %{tx.inbound_anomaly_score_pl1}, %{tx.inbound_anomaly_score_pl2}, %{tx.inbound_anomaly_score_pl3}, %{tx.inbound_anomaly_score_pl4}',\
    tag:'reporting',\
    ver:'OWASP_CRS/3.4.0-dev'"

SecMarker "END-REPORTING"


SecRule TX:DETECTION_PARANOIA_LEVEL "@lt 1" "id:980011,phase:1,pass,nolog,skipAfter:END-RESPONSE-980-CORRELATION"
SecRule TX:DETECTION_PARANOIA_LEVEL "@lt 1" "id:980012,phase:2,pass,nolog,skipAfter:END-RESPONSE-980-CORRELATION"
#
# -= Paranoia Level 1 (default) =- (apply only when tx.detection_paranoia_level is sufficiently high: 1 or higher)
#



SecRule TX:DETECTION_PARANOIA_LEVEL "@lt 2" "id:980013,phase:1,pass,nolog,skipAfter:END-RESPONSE-980-CORRELATION"
SecRule TX:DETECTION_PARANOIA_LEVEL "@lt 2" "id:980014,phase:2,pass,nolog,skipAfter:END-RESPONSE-980-CORRELATION"
#
# -= Paranoia Level 2 =- (apply only when tx.detection_paranoia_level is sufficiently high: 2 or higher)
#



SecRule TX:DETECTION_PARANOIA_LEVEL "@lt 3" "id:980015,phase:1,pass,nolog,skipAfter:END-RESPONSE-980-CORRELATION"
SecRule TX:DETECTION_PARANOIA_LEVEL "@lt 3" "id:980016,phase:2,pass,nolog,skipAfter:END-RESPONSE-980-CORRELATION"
#
# -= Paranoia Level 3 =- (apply only when tx.detection_paranoia_level is sufficiently high: 3 or higher)
#



SecRule TX:DETECTION_PARANOIA_LEVEL "@lt 4" "id:980017,phase:1,pass,nolog,skipAfter:END-RESPONSE-980-CORRELATION"
SecRule TX:DETECTION_PARANOIA_LEVEL "@lt 4" "id:980018,phase:2,pass,nolog,skipAfter:END-RESPONSE-980-CORRELATION"
#
# -= Paranoia Level 4 =- (apply only when tx.detection_paranoia_level is sufficiently high: 4 or higher)
#



#
# -= Paranoia Levels Finished =-
#
SecMarker "END-RESPONSE-980-CORRELATION"
